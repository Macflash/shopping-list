{"version":3,"sources":["components/flexrow.tsx","models/items.ts","components/itemPicker.tsx","components/headerrow.tsx","components/categorylist.tsx","components/actionlist.tsx","components/shoppinglist.tsx","components/menubar.tsx","components/fridgelist.tsx","components/cooklist.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FlexRow","props","react_default","a","createElement","style","Object","objectSpread","display","alignItems","column","undefined","padding","flexDirection","flex","fill","children","GetItem","fullName","Items","find","item","name","GroundMeat","category","expirationLenth","FilletMeat","Lettuce","concat","Bread","BakingItem","unopenedExpirationLength","ItemPicker","TagPicker","searchingText","styles","onValidateInput","input","Fabric","valid","onResolveSuggestions","filter","partialName","items","toLowerCase","includes","i","hiddenItems","some","hiddenName","map","key","length","onItemSelected","selectedItem","definedItem","onAddItem","HeaderRow","flexrow_FlexRow","sub","fontWeight","fontSize","borderBottom","text","CategoryList","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","_this","itemsToSort","toConsumableArray","forEach","index","sortedItems","sort","b","aCat","bCat","lastCat","push","headerrow_HeaderRow","renderItem","overflowY","React","Component","ActionList","Fragment","list","paddingBottom","actions","ShoppingList","actionlist_ActionList","categorylist_CategoryList","shoppingList","Checkbox","label","checked","purchased","onChange","ev","newList","setShoppingList","PurchaseItem","IconButton","marginLeft","iconProps","iconName","onClick","splice","DeleteItem","justifyContent","itemPicker_ItemPicker","root","minWidth","width","margin","s","DefaultButton","marginRight","onComplete","disabled","MenuBar","_React$useState","useState","_React$useState2","slicedToArray","open","setOpen","backgroundColor","menuItems","ActionButton","icon","setView","view","FridgeList","Date","date","setDate","fridgeList","expiryContent","expiryColor","textColor","textDecoration","expiryDate","expires","expiryString","toLocaleDateString","weekday","day","month","longDate","getDate","closeDate","color","fontStyle","setFridgeList","status","DatePicker","onSelectDate","newDate","CookList","minValues","expiry","mealCategories","savedView","localStorage","getItem","savedShoppingList","savedFridgeList","App","_React$useState3","JSON","parse","_React$useState4","_React$useState5","_React$useState6","setItem","stringify","content","shoppinglist_ShoppingList","shoppingItem","def","expirationLength","fridgelist_FridgeList","cooklist_CookList","height","position","menubar_MenuBar","Boolean","window","location","hostname","match","initializeIcons","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.818211ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\n\r\nexport const FlexRow: React.FC<{ fill?: boolean, column?: boolean, style?: any }> = props => {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            alignItems: props.column ? undefined : \"center\",\r\n            padding: props.column ? undefined : \"10px\",\r\n            flexDirection: props.column ? \"column\" : \"row\",\r\n            flex: props.fill ? \"auto\" : \"none\",\r\n            ...props.style,\r\n        }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import { IItemDefinition } from \"./models\";\r\n\r\nexport const LookupItems = (partialName: string): IItemDefinition[] => Items.filter(item => item.name.toLowerCase().includes(partialName.toLowerCase()));\r\n\r\nexport const GetItem = (fullName: string): IItemDefinition | undefined => Items.find(item => item.name == fullName);\r\n\r\nexport type Category =\r\n    \"Other\" |\r\n    \"Fruit\" |\r\n    \"Vegetable\" |\r\n    \"Meat\" |\r\n    \"Dairy\" |\r\n    \"Carbs\" |\r\n    \"Baking\";\r\n\r\nexport type Packaging =\r\n    \"Fresh\" |\r\n    \"Frozen\" |\r\n    \"Canned\";\r\n\r\nconst GroundMeat = (name: string): IItemDefinition => {\r\n    return {\r\n        name,\r\n        category: \"Meat\",\r\n        expirationLenth: 5 // ???\r\n    }\r\n}\r\n\r\nconst FilletMeat = (name: string): IItemDefinition => {\r\n    return {\r\n        name,\r\n        category: \"Meat\",\r\n        expirationLenth: 5 // ???\r\n    }\r\n}\r\n\r\nconst Lettuce = (name: string): IItemDefinition => {\r\n    return {\r\n        name: `${name} Lettuce`,\r\n        category: \"Vegetable\",\r\n        expirationLenth: 5 // ???\r\n    }\r\n}\r\n\r\nconst Bread = (name: string): IItemDefinition => {\r\n    return {\r\n        name,\r\n        category: \"Carbs\",\r\n        expirationLenth: 7,\r\n    };\r\n}\r\n\r\nconst BakingItem = (name: string): IItemDefinition => {\r\n    return {\r\n        name,\r\n        category: \"Baking\",\r\n        expirationLenth: 360 // roughly speaking?\r\n    }\r\n}\r\n\r\nexport const Items: IItemDefinition[] = [\r\n    // MEAT\r\n    GroundMeat(\"Ground Beef\"),\r\n    GroundMeat(\"Ground Turkey\"),\r\n    GroundMeat(\"Ground Sausage\"),\r\n\r\n    FilletMeat(\"Steak\"),\r\n    FilletMeat(\"Chicken Breast\"),\r\n    FilletMeat(\"Bacon\"),\r\n    FilletMeat(\"Tuna Fillet\"),\r\n    FilletMeat(\"Salmon Fillet\"),\r\n\r\n    // Carbs\r\n    {\r\n        name: \"Rice\",\r\n        category: \"Carbs\",\r\n        expirationLenth: 180 // optimistic?\r\n    },\r\n    {\r\n        name: \"Beans\",\r\n        category: \"Carbs\",\r\n        expirationLenth: 180 // optimistic?\r\n    },\r\n    {\r\n        name: \"Potatoes\",\r\n        category: \"Carbs\",\r\n        expirationLenth: 14\r\n    },\r\n    Bread(\"Whole Wheat Bread\"),\r\n    Bread(\"White Bread\"),\r\n    Bread(\"Bagels\"),\r\n    Bread(\"English Muffins\"),\r\n\r\n    // VEGGIES\r\n    Lettuce(\"Romaine\"),\r\n    Lettuce(\"Iceberg\"),\r\n    Lettuce(\"Boston\"),\r\n    Lettuce(\"Red Lead\"),\r\n    Lettuce(\"Spring Mix\"),\r\n    {\r\n        name: \"Broccoli\",\r\n        category: \"Vegetable\",\r\n        expirationLenth: 6,\r\n    },\r\n    {\r\n        name: \"Carrots\",\r\n        category: \"Vegetable\",\r\n        expirationLenth: 21,\r\n    },\r\n    \r\n    // DAIRY\r\n    {\r\n        name: \"Butter\",\r\n        category: \"Dairy\",\r\n        expirationLenth: 30,\r\n    },\r\n    {\r\n        name: \"Yogurt\",\r\n        category: \"Dairy\",\r\n        expirationLenth: 6,\r\n        unopenedExpirationLength: 21,\r\n    },\r\n    {\r\n        name: \"Greek Yogurt\",\r\n        category: \"Dairy\",\r\n        expirationLenth: 6,\r\n        unopenedExpirationLength: 21,\r\n    },\r\n    {\r\n        name: \"Milk\",\r\n        category: \"Dairy\",\r\n        expirationLenth: 7,\r\n    },\r\n    {\r\n        name: \"Creamer\",\r\n        category: \"Dairy\",\r\n        expirationLenth: 14,\r\n    },\r\n    {\r\n        name: \"Eggs\",\r\n        category: \"Other\",\r\n        expirationLenth: 7,\r\n    },\r\n\r\n    // Baking Items and Spices\r\n    BakingItem(\"Flour\"),\r\n    BakingItem(\"Whole Wheat Flour\"),\r\n    BakingItem(\"Sugar\"),\r\n    BakingItem(\"Brown Sugar\"),\r\n    BakingItem(\"Baking Sode\"),\r\n    BakingItem(\"Baking Powder\"),\r\n    BakingItem(\"Corn Starch\"),\r\n\r\n    BakingItem(\"Salt\"),\r\n    BakingItem(\"Sea Salt\"),\r\n    BakingItem(\"Pepper\"),\r\n    BakingItem(\"Whole Peppercorn\"),\r\n    BakingItem(\"Cinnamon\"),\r\n    BakingItem(\"Vannilla Extract\"),\r\n\r\n    BakingItem(\"Rosemary\"),\r\n    BakingItem(\"Sage\"),\r\n    BakingItem(\"Thyme\"),\r\n    BakingItem(\"Dried Basil\"),\r\n\r\n    // Saucy boys\r\n    BakingItem(\"Soy Sauce\"),\r\n    BakingItem(\"Worchestershire Sauce\"),\r\n    BakingItem(\"Balsamic Vinegar\"),\r\n    BakingItem(\"White Vinegar\"),\r\n    BakingItem(\"Red Wine Vinegar\"),\r\n\r\n];","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { LookupItems, GetItem } from '../models/items';\r\nimport { IItemDefinition } from '../models/models';\r\n\r\nexport const ItemPicker: React.FC<{\r\n    styles: Fabric.IStyleFunction<Fabric.IBasePickerStyleProps, Fabric.IBasePickerStyles> | Partial<Fabric.IBasePickerStyles> | undefined,\r\n    onAddItem: (item: IItemDefinition) => void,\r\n    hiddenItems?: string[],\r\n}> = props => {\r\n    return (\r\n        <Fabric.TagPicker\r\n            searchingText=\"Searching...\"\r\n            styles={props.styles}\r\n            onValidateInput={input => Fabric.ValidationState.valid}\r\n            onResolveSuggestions={filter => {\r\n                let items = LookupItems(filter).filter(i => {\r\n                    if (props.hiddenItems && props.hiddenItems.some(hiddenName => hiddenName == i.name)) {\r\n                        return false;\r\n                    }\r\n\r\n                    return true;\r\n                }).map(i => {\r\n                    var tag: Fabric.ITag = {\r\n                        key: i.name,\r\n                        name: i.name,\r\n                    }\r\n\r\n                    return tag;\r\n                });\r\n\r\n                if (filter && filter.length) {\r\n                    items = items.concat({ key: filter, name: filter });\r\n                }\r\n\r\n                return items;\r\n            }}\r\n            onItemSelected={selectedItem => {\r\n                if (selectedItem) {\r\n                    let definedItem = GetItem(selectedItem.name);\r\n\r\n                    props.onAddItem(definedItem || {\r\n                        name: selectedItem.name,\r\n                        category: \"Other\"\r\n                    });\r\n                }\r\n\r\n                return null;\r\n            }}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { FlexRow } from './flexrow';\r\n\r\nexport const HeaderRow: React.FC<{ text: string, sub?: boolean }> = props => {\r\n    return (\r\n        <FlexRow style={{\r\n            padding: props.sub ? \"0 10px\" : \"10px\",\r\n            fontWeight: props.sub ? 300 : 500,\r\n            fontSize: props.sub ? \"150%\" : \"125%\",\r\n            borderBottom: props.sub ? undefined : \"1px solid lightgrey\",\r\n        }}>\r\n            {props.text}\r\n        </FlexRow>\r\n    );\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { ICategoryItem } from '../models/models';\r\nimport { Category } from '../models/items';\r\nimport { HeaderRow } from './headerrow';\r\n\r\nexport interface ICategoryListProps<T> {\r\n    items: T[],\r\n    renderItem: (item: T, index: number) => JSX.Element,\r\n}\r\n\r\ninterface IndexedItem extends ICategoryItem {\r\n    index: number;\r\n}\r\n\r\nexport class CategoryList<T extends ICategoryItem> extends React.Component<ICategoryListProps<T>> {\r\n    render() {\r\n        let itemsToSort = [...this.props.items] as any as IndexedItem[];\r\n        itemsToSort.forEach((item, index) => item.index = index);\r\n\r\n        // sort the items by category, and add a title when it changes!\r\n        const sortedItems = itemsToSort.sort((a, b) => {\r\n            const aCat = a.category || \"Other\";\r\n            const bCat = b.category || \"Other\";\r\n            if (aCat < bCat) {\r\n                return -1;\r\n            }\r\n            if (aCat == bCat) {\r\n                return 0;\r\n            }\r\n\r\n            return 1;\r\n        });\r\n\r\n        const items: JSX.Element[] = [];\r\n        let lastCat: Category | undefined = undefined;\r\n        sortedItems.forEach(item => {\r\n            if (lastCat != item.category) {\r\n                lastCat = item.category;\r\n                items.push(<HeaderRow text={lastCat || \"Other\"} key={lastCat} />);\r\n            }\r\n\r\n            items.push(this.props.renderItem(item as any as T, item.index));\r\n        });\r\n\r\n        return <div style={{ overflowY: \"auto\" }}>{items}</div>;\r\n    }\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { FlexRow } from './flexrow';\r\n\r\nexport const ActionList: React.FC<{ actions: React.ReactNode[], list: React.ReactNode[] }> = props => {\r\n    return (\r\n        <>\r\n            {props.list}\r\n            <FlexRow style={{ flex: \"none\", paddingBottom: \"30px\" }}>\r\n                {props.actions}\r\n            </FlexRow>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { FlexRow } from './flexrow';\r\nimport { IShoppingItem, IItemDefinition } from '../models/models';\r\nimport { ItemPicker } from './itemPicker';\r\nimport { CategoryList } from './categorylist';\r\nimport { ActionList } from './actionlist';\r\n\r\ntype ShoppingListProps = {\r\n    onComplete: () => void;\r\n    shoppingList: IShoppingItem[];\r\n    setShoppingList: React.Dispatch<React.SetStateAction<IShoppingItem[]>>;\r\n};\r\n\r\nexport const ShoppingList: React.FC<ShoppingListProps> = props => {\r\n    const AddItem = (item: IItemDefinition) => {\r\n        props.setShoppingList([...props.shoppingList, { name: item.name, category: item.category, purchased: false }]);\r\n    }\r\n\r\n    const DeleteItem = (index: number) => {\r\n        let newList = [...props.shoppingList];\r\n        newList.splice(index, 1);\r\n        props.setShoppingList(newList);\r\n    }\r\n\r\n    const PurchaseItem = (index: number, purchased: boolean) => {\r\n        let newList = [...props.shoppingList];\r\n        newList[index] = { ...newList[index], purchased };\r\n        props.setShoppingList(newList);\r\n    }\r\n\r\n    let margin = \"0 5px\";\r\n\r\n    return (\r\n        <ActionList\r\n            list={[\r\n                <CategoryList\r\n                    items={props.shoppingList}\r\n                    renderItem={(item, index) => <FlexRow>\r\n                        <Fabric.Checkbox\r\n                            label={item.name}\r\n                            checked={item.purchased}\r\n                            onChange={(ev, checked) => {\r\n                                PurchaseItem(index, checked || false);\r\n                            }}\r\n                        />\r\n                        <Fabric.IconButton\r\n                            style={{ marginLeft: \"auto\" }}\r\n                            iconProps={{ iconName: \"Delete\" }}\r\n                            onClick={() => { DeleteItem(index); }}\r\n                        />\r\n                    </FlexRow>}\r\n                />,\r\n                !props.shoppingList || !props.shoppingList.length\r\n                    ? <FlexRow style={{ justifyContent: \"center\", fontWeight: 300 }}>Get started by adding some items to your shopping list!</FlexRow>\r\n                    : null\r\n            ]}\r\n\r\n            actions={[\r\n                <ItemPicker\r\n                    styles={{ root: { minWidth: \"200px\", width: \"50%\", margin, marginLeft: \"auto\" } }}\r\n                    onAddItem={AddItem}\r\n                    hiddenItems={props.shoppingList.map(s => s.name)}\r\n                />,\r\n                <Fabric.DefaultButton\r\n                    style={{ margin, marginRight: \"auto\" }}\r\n                    text=\"Trip Complete\"\r\n                    iconProps={{ iconName: \"ShoppingCart\" }}\r\n                    onClick={props.onComplete}\r\n                    disabled={props.shoppingList.length < 1 || !props.shoppingList.some(i => i.purchased)}\r\n                />\r\n            ]}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { FlexRow } from './flexrow';\r\nimport { IMenuItem, View } from '../App';\r\nimport { HeaderRow } from './headerrow';\r\n\r\nexport const MenuBar: React.FC<{ open?: boolean, menuItems: IMenuItem[], view: View, setView: React.Dispatch<React.SetStateAction<View>> }> = props => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const style = { borderBottom: \"1px solid lightgrey\" };\r\n\r\n    return (\r\n        <FlexRow column={true} style={{backgroundColor: \"#F5F5F5\"}}>\r\n            {props.open || open\r\n                ?\r\n                <>\r\n                    {props.open ? null : <FlexRow style={style}>\r\n                        <Fabric.IconButton iconProps={{ iconName: \"CollapseMenu\" }} onClick={() => setOpen(false)} />\r\n                    </FlexRow>}\r\n                    {props.menuItems.map(item =>\r\n                        <FlexRow style={style}>\r\n                            <Fabric.ActionButton\r\n                                iconProps={{ iconName: item.icon }}\r\n                                text={item.key}\r\n                                onClick={() => {\r\n                                    setOpen(false);\r\n                                    props.setView(item.key);\r\n                                }}\r\n                            />\r\n                        </FlexRow>\r\n                    )}\r\n                </>\r\n                : <FlexRow style={style}>\r\n                    <Fabric.IconButton iconProps={{ iconName: \"CollapseMenu\" }} onClick={() => setOpen(true)} />\r\n                    <HeaderRow sub text={props.view} />\r\n                </FlexRow>\r\n            }\r\n        </FlexRow>\r\n    );\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { FlexRow } from './flexrow';\r\nimport { IShoppingItem, IFridgeItem, IItemDefinition } from '../models/models';\r\nimport { ItemPicker } from './itemPicker';\r\nimport { CategoryList } from './categorylist';\r\nimport { ActionList } from './actionlist';\r\n\r\ntype FridgeListProps = {\r\n    fridgeList: IFridgeItem[];\r\n    setFridgeList: React.Dispatch<React.SetStateAction<IFridgeItem[]>>;\r\n};\r\n\r\nexport const FridgeList: React.FC<FridgeListProps> = props => {\r\n    const [date, setDate] = React.useState(new Date());\r\n\r\n    const AddItem = (item: IItemDefinition) => {\r\n        let expires = new Date(date);\r\n        expires.setDate(expires.getDate() + (item.expirationLenth || 7));\r\n        props.setFridgeList([...props.fridgeList, { name: item.name, category: item.category, purchased: date, status: \"Fresh\", expires }]);\r\n    }\r\n\r\n    const DeleteItem = (index: number) => {\r\n        let newList = [...props.fridgeList];\r\n        newList.splice(index, 1);\r\n        props.setFridgeList(newList);\r\n    }\r\n\r\n    let margin = \"0 5px\";\r\n\r\n    return (\r\n        <ActionList\r\n            list={[\r\n                <CategoryList\r\n                    items={props.fridgeList}\r\n                    renderItem={(item, index) => {\r\n                        let expiryContent = null;\r\n                        let expiryColor = \"darkgrey\";\r\n\r\n                        let textColor = undefined;\r\n                        let textDecoration = undefined;\r\n\r\n                        let expiryDate = new Date(item.expires);\r\n                        let expiryString = expiryDate.toLocaleDateString(\"default\", { weekday: \"long\", day: \"numeric\", month: \"numeric\" });\r\n\r\n                        let longDate = new Date();\r\n                        longDate.setDate(longDate.getDate() + 30);\r\n\r\n                        var closeDate = new Date();\r\n                        closeDate.setDate(closeDate.getDate() + 3);\r\n\r\n                        var currentDate = new Date();\r\n\r\n                        if (expiryDate <= currentDate) {\r\n                            expiryContent = \"Expired\";\r\n                            expiryColor = \"red\";\r\n                            textDecoration = \"line-through\";\r\n                            textColor = \"darkgrey\";\r\n                        }\r\n                        else if (expiryDate <= closeDate) {\r\n                            expiryColor = \"red\";\r\n                            expiryContent = \"Expires \" + expiryString;\r\n                        }\r\n                        else if (expiryDate <= longDate) {\r\n                            expiryContent = \"Expires \" + expiryString;\r\n                        }\r\n\r\n                        return <FlexRow>\r\n                            <div style={{textDecoration, color: textColor}}>{item.name}</div>\r\n                            <div style={{ color: expiryColor, margin: \"0 10px\", marginLeft: \"auto\", fontSize: \"80%\", fontStyle: \"italic\" }}>\r\n                                {expiryContent}\r\n                            </div>\r\n                            <Fabric.IconButton\r\n                                style={{ marginLeft: undefined }}\r\n                                iconProps={{ iconName: \"Delete\" }}\r\n                                onClick={() => { DeleteItem(index); }}\r\n                            />\r\n                        </FlexRow>\r\n                    }\r\n                    }\r\n                />,\r\n                !props.fridgeList || !props.fridgeList.length\r\n                    ? <FlexRow style={{ justifyContent: \"center\", fontWeight: 300 }}>Get started by adding some items to your fridge!</FlexRow>\r\n                    : null\r\n            ]}\r\n\r\n            actions={[\r\n                <ItemPicker\r\n                    styles={{ root: { minWidth: \"200px\", width: \"50%\", margin, marginLeft: \"auto\" } }}\r\n                    onAddItem={AddItem}\r\n                />,\r\n                <Fabric.DatePicker\r\n                    style={{ margin, marginRight: \"auto\" }}\r\n                    value={date}\r\n                    onSelectDate={newDate => newDate && setDate(newDate)}\r\n                />]}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { FlexRow } from './flexrow';\r\nimport { IShoppingItem, IItemDefinition, IFridgeItem } from '../models/models';\r\nimport { ItemPicker } from './itemPicker';\r\nimport { CategoryList } from './categorylist';\r\nimport { ActionList } from './actionlist';\r\nimport { Category } from '../models/items';\r\n\r\ntype CookListProps = {\r\n    fridgeList: IFridgeItem[];\r\n    setFridgeList: React.Dispatch<React.SetStateAction<IFridgeItem[]>>;\r\n};\r\n\r\nexport const CookList: React.FC<CookListProps> = props => {\r\n\r\n    let margin = \"0 5px\";\r\n\r\n    // we want to get just the closest expiration date items for each category\r\n    const minValues: {[category: string]: Date} = {};\r\n\r\n    props.fridgeList.filter(item => new Date(item.expires) > new Date()).forEach(item => {\r\n        let expiry = new Date(item.expires);\r\n        item.expires = expiry;\r\n        if(!minValues[item.category] || minValues[item.category] > expiry){\r\n            minValues[item.category] = expiry;\r\n        }\r\n    });\r\n\r\n    // eh, an ok start\r\n    const mealCategories: Category[] = [\"Meat\", \"Vegetable\", \"Carbs\", \"Other\"];\r\n\r\n    // FYI Date == is reference equality\r\n    const items = props.fridgeList.filter(item => minValues[item.category] == item.expires && mealCategories.includes(item.category));\r\n\r\n    return (\r\n        <ActionList\r\n            list={[\r\n                <CategoryList\r\n                    items={items}\r\n                    renderItem={(item, index) => <FlexRow>\r\n                        <Fabric.Checkbox\r\n                            label={item.name}\r\n                        />\r\n                    </FlexRow>}\r\n                />\r\n            ]}\r\n\r\n            actions={[]}\r\n        />\r\n    );\r\n}","import React from 'react';\nimport * as Fabric from 'office-ui-fabric-react';\nimport { ShoppingList } from './components/shoppinglist';\nimport { MenuBar } from './components/menubar';\nimport { FlexRow } from './components/flexrow';\nimport { HeaderRow } from './components/headerrow';\nimport { IShoppingItem, IFridgeItem, ItemStatus } from './models/models';\nimport { FridgeList } from './components/fridgelist';\nimport { GetItem } from './models/items';\nimport { CookList } from './components/cooklist';\n\nexport type View = \"Menu\" | \"Shop\" | \"Fridge\" | \"Cook\";\n\nexport interface IMenuItem {\n  key: View;\n  icon?: string;\n}\n\nconst savedView = localStorage.getItem(\"view-state\") || \"Shop\";\nconst savedShoppingList = localStorage.getItem(\"shopping-list\") || \"[]\";\nconst savedFridgeList = localStorage.getItem(\"fridge-list\") || \"[]\";\n\nconst App: React.FC = () => {\n  const [view, setView] = React.useState<View>(savedView as View);\n  const [shoppingList, setShoppingList] = React.useState<IShoppingItem[]>(JSON.parse(savedShoppingList));\n  const [fridgeList, setFridgeList] = React.useState<IFridgeItem[]>(JSON.parse(savedFridgeList));\n\n  // if state has changed save it locally!\n  localStorage.setItem(\"view-state\", view);\n  localStorage.setItem(\"shopping-list\", JSON.stringify(shoppingList));\n  localStorage.setItem(\"fridge-list\", JSON.stringify(fridgeList));\n\n  const menuItems: IMenuItem[] = [\n    { key: \"Shop\", icon: \"ShoppingCart\" },\n    { key: \"Fridge\", icon: \"Door\" },\n    { key: \"Cook\", icon: \"EatDrink\" },\n  ];\n\n  let content = null;\n  switch (view) {\n    case \"Shop\":\n      content = <ShoppingList\n        shoppingList={shoppingList}\n        setShoppingList={setShoppingList}\n        onComplete={() => {\n          setFridgeList([\n            ...fridgeList,\n            ...shoppingList.filter(s => s.purchased).map(\n              shoppingItem => {\n                const def = GetItem(shoppingItem.name);\n                let expirationLength = 7;\n                let status: ItemStatus = \"Fresh\";\n                if (def && def.expirationLenth) {\n                  expirationLength = def.expirationLenth;\n                }\n                if (def && def.unopenedExpirationLength) {\n                  status = \"Unopened\";\n                }\n\n                let purchased = new Date();\n                let expires = new Date();\n                expires.setDate(purchased.getDate() + expirationLength);\n                const fridgeItem: IFridgeItem = {\n                  name: shoppingItem.name,\n                  category: shoppingItem.category,\n                  purchased,\n                  expires,\n                  status,\n                };\n\n                return fridgeItem;\n              }\n            )]);\n\n          setShoppingList([]);\n          setView(\"Fridge\");\n        }}\n      />;\n      break;\n    case \"Fridge\":\n      content = <FridgeList\n        fridgeList={fridgeList}\n        setFridgeList={setFridgeList}\n      />;\n      break;\n    case \"Cook\":\n      content = <CookList\n        fridgeList={fridgeList}\n        setFridgeList={setFridgeList}\n      />\n      break;\n  }\n\n  return <FlexRow column style={{ height: \"100%\", width: \"100%\", position: \"absolute\" }}>\n    <MenuBar menuItems={menuItems} setView={setView} open={!content} view={view} />\n    {content}\n  </FlexRow>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { initializeIcons } from '@uifabric/icons';\r\ninitializeIcons();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}