{"version":3,"sources":["components/flexrow.tsx","models/items.ts","components/emoji.tsx","components/itemPicker.tsx","components/headerrow.tsx","components/categorylist.tsx","components/actionlist.tsx","components/expirationrow.tsx","components/shoppinglist.tsx","components/menubar.tsx","components/fridgelist.tsx","components/cooklist.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FlexRow","props","react_default","a","createElement","onClick","style","Object","objectSpread","cursor","undefined","display","alignItems","column","padding","flexDirection","flex","fill","children","GetItem","fullName","Items","find","item","name","toLowerCase","Food","category","emoji","GroundMeat","expirationLenth","FilletMeat","Lettuce","concat","Bread","BakingItem","unopenedExpirationLength","Emoji","e","defined","margin","ItemPicker","TagPicker","searchingText","styles","onValidateInput","input","Fabric","valid","onRenderSuggestionsItem","itemProps","flexrow_FlexRow","emoji_Emoji","onResolveSuggestions","filter","partialName","items","includes","i","hiddenItems","some","hiddenName","map","key","length","onItemSelected","selectedItem","definedItem","onAddItem","HeaderRow","sub","fontWeight","fontSize","borderBottom","text","CategoryList","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","_this","itemsToSort","toConsumableArray","forEach","index","sortedItems","sort","b","aCat","bCat","lastCat","push","headerrow_HeaderRow","renderItem","overflowY","React","Component","ActionList","Fragment","list","paddingBottom","actions","ExpirationRow","expiryContent","expiryColor","textColor","textDecoration","fridgeItem","expires","expiryDate","Date","expiryString","toLocaleDateString","weekday","day","month","longDate","setDate","getDate","closeDate","nameLabel","NameAndEmoji","onCheckboxChange","Checkbox","checked","onChange","label","color","marginLeft","fontStyle","ShoppingList","actionlist_ActionList","categorylist_CategoryList","shoppingList","expirationrow_ExpirationRow","purchased","ev","newList","setShoppingList","PurchaseItem","IconButton","iconProps","iconName","splice","DeleteItem","justifyContent","itemPicker_ItemPicker","root","minWidth","width","s","DefaultButton","marginRight","onComplete","disabled","MenuBar","_React$useState","useState","_React$useState2","slicedToArray","open","setOpen","backgroundColor","maxWidth","Icon","menuItems","view","icon","setView","ActionButton","FridgeList","date","fridgeList","setFridgeList","status","DatePicker","onSelectDate","newDate","CookList","minValues","expiry","mealCategories","savedView","localStorage","getItem","savedShoppingList","savedFridgeList","App","_React$useState3","JSON","parse","_React$useState4","_React$useState5","_React$useState6","setItem","stringify","content","shoppinglist_ShoppingList","shoppingItem","def","expirationLength","fridgelist_FridgeList","cooklist_CookList","height","position","menubar_MenuBar","Boolean","window","location","hostname","match","initializeIcons","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b43b8cd7.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\n\r\nexport const FlexRow: React.FC<{ onClick?: () => void, fill?: boolean, column?: boolean, style?: any }> = props => {\r\n    return (\r\n        <div\r\n            onClick={props.onClick}\r\n            style={{\r\n                cursor: props.onClick ? \"pointer\" : undefined,\r\n                display: \"flex\",\r\n                alignItems: props.column ? undefined : \"center\",\r\n                padding: props.column ? undefined : \"10px\",\r\n                flexDirection: props.column ? \"column\" : \"row\",\r\n                flex: props.fill ? \"auto\" : \"none\",\r\n                ...props.style,\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import { IItemDefinition } from \"./models\";\r\n\r\nexport const LookupItems = (partialName: string): IItemDefinition[] => Items.filter(item => item.name.toLowerCase().includes(partialName.toLowerCase()));\r\n\r\nexport const GetItem = (fullName: string): IItemDefinition | undefined => Items.find(item => item.name.toLowerCase() == fullName.toLowerCase());\r\n\r\nexport type Category =\r\n    \"Other\" |\r\n    \"Fruit\" |\r\n    \"Vegetable\" |\r\n    \"Meat\" |\r\n    \"Dairy\" |\r\n    \"Carbs\" |\r\n    \"Baking\";\r\n\r\nexport type Packaging =\r\n    \"Fresh\" |\r\n    \"Frozen\" |\r\n    \"Canned\";\r\n\r\nconst Food = (name: string, category: Category, emoji?: string): IItemDefinition => {\r\n    return { name, category, emoji };\r\n}\r\n\r\nconst GroundMeat = (name: string): IItemDefinition => {\r\n    return {\r\n        name,\r\n        category: \"Meat\",\r\n        expirationLenth: 5 // ???\r\n    }\r\n}\r\n\r\nconst FilletMeat = (name: string, emoji?: string): IItemDefinition => {\r\n    return {\r\n        name,\r\n        category: \"Meat\",\r\n        expirationLenth: 5,\r\n        emoji,\r\n    }\r\n}\r\n\r\nconst Lettuce = (name: string): IItemDefinition => {\r\n    return {\r\n        name: `${name} Lettuce`,\r\n        category: \"Vegetable\",\r\n        expirationLenth: 5,\r\n        emoji: \"🥬\",\r\n    }\r\n}\r\n\r\nconst Bread = (name: string, emoji?: string): IItemDefinition => {\r\n    return {\r\n        name,\r\n        category: \"Carbs\",\r\n        expirationLenth: 7,\r\n        emoji,\r\n    };\r\n}\r\n\r\nconst BakingItem = (name: string, emoji?: string): IItemDefinition => {\r\n    return {\r\n        name,\r\n        emoji,\r\n        category: \"Baking\",\r\n        expirationLenth: 360 // roughly speaking?\r\n    }\r\n}\r\n\r\nexport const Items: IItemDefinition[] = [\r\n    // EMOJIS\r\n    Food(\"Grapes\", \"Fruit\", \"🍇\"),\r\n    Food(\"Honeydew\", \"Fruit\", \"🍈\"),\r\n    Food(\"Watermelon\", \"Fruit\", \"🍉\"),\r\n    Food(\"Oranges\", \"Fruit\", \"🍊\"),\r\n\r\n    Food(\"Lemons\", \"Fruit\", \"🍋\"),\r\n    Food(\"Bananas\", \"Fruit\", \"🍌\"),\r\n    Food(\"Pineapple\", \"Fruit\", \"🍍\"),\r\n    Food(\"Mangos\", \"Fruit\", \"🥭\"),\r\n    Food(\"Apples\", \"Fruit\", \"🍎\"),\r\n    Food(\"Pears\", \"Fruit\", \"🍐\"),\r\n    Food(\"Peaches\", \"Fruit\", \"🍑\"),\r\n    Food(\"Cherries\", \"Fruit\", \"🍒\"),\r\n    Food(\"Strawberries\", \"Fruit\", \"🍓\"),\r\n\r\n    Food(\"Kiwi\", \"Fruit\", \"🥝\"),\r\n    Food(\"Tomatoes\", \"Vegetable\", \"🍅\"),\r\n    Food(\"Coconut\", \"Fruit\", \"🥥\"),\r\n\r\n    Food(\"Avocado\", \"Vegetable\", \"🥑\"),\r\n    Food(\"Eggplant\", \"Fruit\", \"🍆\"),\r\n\r\n    Food(\"Corn\", \"Vegetable\", \"🌽\"),\r\n    Food(\"Peppers\", \"Vegetable\", \"🌶\"),\r\n    Food(\"Cucumber\", \"Vegetable\", \"🥒\"),\r\n    Food(\"Pickles\", \"Vegetable\", \"🥒\"),\r\n    Food(\"Garlic\", \"Vegetable\", \"🧄\"),\r\n    Food(\"Onions\", \"Vegetable\", \"🧅\"),\r\n    Food(\"Mushrooms\", \"Vegetable\", \"🍄\"),\r\n\r\n\r\n    // MEAT\r\n    GroundMeat(\"Ground Beef\"),\r\n    GroundMeat(\"Ground Turkey\"),\r\n    GroundMeat(\"Ground Sausage\"),\r\n\r\n    FilletMeat(\"Steak\", \"🥩\"),\r\n    FilletMeat(\"Chicken Breast\"),\r\n    FilletMeat(\"Bacon\", \"🥓\"),\r\n    FilletMeat(\"Tuna Fillet\"),\r\n    FilletMeat(\"Salmon Fillet\"),\r\n\r\n    // SEAFOOD\r\n    FilletMeat(\"Crab\", \"🦀\"),\r\n    FilletMeat(\"Lobster\", \"🦞\"),\r\n    FilletMeat(\"Shrimp\", \"🦐\"),\r\n    FilletMeat(\"Shrimp\", \"🦐\"),\r\n    FilletMeat(\"Squid\", \"🦑\"),\r\n    FilletMeat(\"Octopus\", \"🦑\"),\r\n    FilletMeat(\"Oysters\", \"🦪\"),\r\n    FilletMeat(\"Mussels\", \"🦪\"),\r\n\r\n\r\n    // Carbs\r\n    {\r\n        name: \"Rice\",\r\n        emoji: \"🍚\",\r\n        category: \"Carbs\",\r\n        expirationLenth: 180 // optimistic?\r\n    },\r\n    {\r\n        name: \"Beans\",\r\n        category: \"Carbs\",\r\n        expirationLenth: 180 // optimistic?\r\n    },\r\n    {\r\n        name: \"Potatoes\",\r\n        category: \"Carbs\",\r\n        expirationLenth: 14,\r\n        emoji: \"🥔\",\r\n    },\r\n    Bread(\"Whole Wheat Bread\", \"🍞\"),\r\n    Bread(\"White Bread\", \"🍞\"),\r\n    Bread(\"Bagels\", \"🥯\"),\r\n    Bread(\"English Muffins\"),\r\n\r\n    // VEGGIES\r\n    Lettuce(\"Romaine\"),\r\n    Lettuce(\"Iceberg\"),\r\n    Lettuce(\"Boston\"),\r\n    Lettuce(\"Red Lead\"),\r\n    Lettuce(\"Spring Mix\"),\r\n    {\r\n        name: \"Broccoli\",\r\n        category: \"Vegetable\",\r\n        expirationLenth: 6,\r\n        emoji: \"🥦\",\r\n    },\r\n    {\r\n        name: \"Carrots\",\r\n        category: \"Vegetable\",\r\n        expirationLenth: 21,\r\n        emoji: \"🥕\",\r\n    },\r\n\r\n    // DAIRY\r\n    {\r\n        name: \"Butter\",\r\n        category: \"Dairy\",\r\n        expirationLenth: 30,\r\n        emoji: \"🧈\",\r\n    },\r\n    {\r\n        name: \"Yogurt\",\r\n        category: \"Dairy\",\r\n        expirationLenth: 6,\r\n        unopenedExpirationLength: 21,\r\n    },\r\n    {\r\n        name: \"Greek Yogurt\",\r\n        category: \"Dairy\",\r\n        expirationLenth: 6,\r\n        unopenedExpirationLength: 21,\r\n    },\r\n    {\r\n        name: \"Milk\",\r\n        category: \"Dairy\",\r\n        expirationLenth: 7,\r\n    },\r\n    {\r\n        name: \"Creamer\",\r\n        category: \"Dairy\",\r\n        expirationLenth: 14,\r\n    },\r\n    {\r\n        name: \"Cheese\",\r\n        category: \"Dairy\",\r\n        emoji: \"🧀\",\r\n    },\r\n    {\r\n        name: \"Eggs\",\r\n        category: \"Other\",\r\n        expirationLenth: 7,\r\n        emoji: \"🥚\"\r\n    },\r\n\r\n    // Baking Items and Spices\r\n    BakingItem(\"Flour\"),\r\n    BakingItem(\"Whole Wheat Flour\"),\r\n    BakingItem(\"Sugar\"),\r\n    BakingItem(\"Brown Sugar\"),\r\n    BakingItem(\"Baking Sode\"),\r\n    BakingItem(\"Baking Powder\"),\r\n    BakingItem(\"Corn Starch\"),\r\n\r\n    BakingItem(\"Salt\", \"🧂\"),\r\n    BakingItem(\"Sea Salt\", \"🧂\"),\r\n    BakingItem(\"Pepper\"),\r\n    BakingItem(\"Whole Peppercorn\"),\r\n    BakingItem(\"Cinnamon\"),\r\n    BakingItem(\"Vannilla Extract\"),\r\n\r\n    BakingItem(\"Rosemary\"),\r\n    BakingItem(\"Sage\"),\r\n    BakingItem(\"Thyme\"),\r\n    BakingItem(\"Dried Basil\"),\r\n\r\n    BakingItem(\"Honey\", \"🍯\"),\r\n\r\n    // Saucy boys\r\n    BakingItem(\"Soy Sauce\"),\r\n    BakingItem(\"Worchestershire Sauce\"),\r\n    BakingItem(\"Balsamic Vinegar\"),\r\n    BakingItem(\"White Vinegar\"),\r\n    BakingItem(\"Red Wine Vinegar\"),\r\n\r\n];","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { GetItem } from '../models/items';\r\n\r\nexport const NameAndEmoji = (name: string): string => {\r\n    let e = GetItem(name);\r\n    let emoji = null;\r\n    if (e) {\r\n        emoji = e.emoji;\r\n    }\r\n\r\n    let nameLabel = name;\r\n    if (emoji) {\r\n        nameLabel = `${emoji} ${nameLabel}`;\r\n    }\r\n\r\n    return nameLabel;\r\n}\r\n\r\nexport const Emoji: React.FC<{ emoji?: string, name?: string }> = props => {\r\n    const margin = \"0 5px\";\r\n    let e = props.emoji;\r\n    if (!props.emoji && props.name) {\r\n        let defined = GetItem(props.name);\r\n        if (defined) {\r\n            e = defined.emoji\r\n        }\r\n    }\r\n    return e ? <div style={{ margin }}>{e}</div> : null;\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { LookupItems, GetItem } from '../models/items';\r\nimport { IItemDefinition } from '../models/models';\r\nimport { Emoji } from './emoji';\r\nimport { FlexRow } from './flexrow';\r\n\r\nexport const ItemPicker: React.FC<{\r\n    styles: Fabric.IStyleFunction<Fabric.IBasePickerStyleProps, Fabric.IBasePickerStyles> | Partial<Fabric.IBasePickerStyles> | undefined,\r\n    onAddItem: (item: IItemDefinition) => void,\r\n    hiddenItems?: string[],\r\n}> = props => {\r\n    return (\r\n        <Fabric.TagPicker\r\n            searchingText=\"Searching...\"\r\n            styles={props.styles}\r\n            onValidateInput={input => Fabric.ValidationState.valid}\r\n            onRenderSuggestionsItem={(props, itemProps) =>\r\n                <FlexRow>\r\n                    <div>{props.name}</div>\r\n                    <Emoji name={props.name} />\r\n                </FlexRow>}\r\n            onResolveSuggestions={filter => {\r\n                let items = LookupItems(filter).filter(i => {\r\n                    if (props.hiddenItems && props.hiddenItems.some(hiddenName => hiddenName == i.name)) {\r\n                        return false;\r\n                    }\r\n\r\n                    return true;\r\n                }).map(i => {\r\n                    var tag: Fabric.ITag = {\r\n                        key: i.name,\r\n                        name: i.name,\r\n                    }\r\n\r\n                    return tag;\r\n                });\r\n\r\n                if (filter && filter.length) {\r\n                    items = items.concat({ key: filter, name: filter });\r\n                }\r\n\r\n                return items;\r\n            }}\r\n            onItemSelected={selectedItem => {\r\n                if (selectedItem) {\r\n                    let definedItem = GetItem(selectedItem.name);\r\n                    props.onAddItem(definedItem || {\r\n                        name: selectedItem.name,\r\n                        category: \"Other\"\r\n                    });\r\n                }\r\n\r\n                return null;\r\n            }}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { FlexRow } from './flexrow';\r\n\r\nexport const HeaderRow: React.FC<{ text: string, sub?: boolean }> = props => {\r\n    return (\r\n        <FlexRow style={{\r\n            padding: props.sub ? \"0 10px\" : \"10px\",\r\n            fontWeight: props.sub ? 300 : 500,\r\n            fontSize: props.sub ? \"150%\" : \"125%\",\r\n            borderBottom: props.sub ? undefined : \"1px solid lightgrey\",\r\n        }}>\r\n            {props.text}\r\n        </FlexRow>\r\n    );\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { ICategoryItem } from '../models/models';\r\nimport { Category } from '../models/items';\r\nimport { HeaderRow } from './headerrow';\r\n\r\nexport interface ICategoryListProps<T> {\r\n    items: T[],\r\n    renderItem: (item: T, index: number) => JSX.Element,\r\n}\r\n\r\ninterface IndexedItem extends ICategoryItem {\r\n    index: number;\r\n}\r\n\r\nexport class CategoryList<T extends ICategoryItem> extends React.Component<ICategoryListProps<T>> {\r\n    render() {\r\n        let itemsToSort = [...this.props.items] as any as IndexedItem[];\r\n        itemsToSort.forEach((item, index) => item.index = index);\r\n\r\n        // sort the items by category, and add a title when it changes!\r\n        const sortedItems = itemsToSort.sort((a, b) => {\r\n            const aCat = a.category || \"Other\";\r\n            const bCat = b.category || \"Other\";\r\n            if (aCat < bCat) {\r\n                return -1;\r\n            }\r\n            if (aCat == bCat) {\r\n                return 0;\r\n            }\r\n\r\n            return 1;\r\n        });\r\n\r\n        const items: JSX.Element[] = [];\r\n        let lastCat: Category | undefined = undefined;\r\n        sortedItems.forEach(item => {\r\n            if (lastCat != item.category) {\r\n                lastCat = item.category;\r\n                items.push(<HeaderRow text={lastCat || \"Other\"} key={lastCat} />);\r\n            }\r\n\r\n            items.push(this.props.renderItem(item as any as T, item.index));\r\n        });\r\n\r\n        return <div style={{ overflowY: \"auto\" }}>{items}</div>;\r\n    }\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { FlexRow } from './flexrow';\r\n\r\nexport const ActionList: React.FC<{ actions: React.ReactNode[], list: React.ReactNode[] }> = props => {\r\n    return (\r\n        <>\r\n            {props.list}\r\n            <FlexRow style={{ flex: \"none\", paddingBottom: \"30px\" }}>\r\n                {props.actions}\r\n            </FlexRow>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { GetItem } from '../models/items';\r\nimport { IFridgeItem, IShoppingItem } from '../models/models';\r\nimport { FlexRow } from './flexrow';\r\nimport { Emoji, NameAndEmoji } from './emoji';\r\n\r\nexport const ExpirationRow: React.FC<{ item: IFridgeItem | IShoppingItem, checked?: boolean, onCheckboxChange?: (ev: any, checked?: boolean) => void }> = props => {\r\n    let margin = \"0 10px\";\r\n    let expiryContent = null;\r\n    let expiryColor = \"darkgrey\";\r\n    let textColor = undefined;\r\n    let textDecoration = undefined;\r\n\r\n    let fridgeItem = props.item as IFridgeItem;\r\n    if (fridgeItem.expires) {\r\n\r\n        let expiryDate = new Date(fridgeItem.expires);\r\n        let expiryString = expiryDate.toLocaleDateString(\"default\", { weekday: \"long\", day: \"numeric\", month: \"numeric\" });\r\n\r\n        let longDate = new Date();\r\n        longDate.setDate(longDate.getDate() + 30);\r\n\r\n        var closeDate = new Date();\r\n        closeDate.setDate(closeDate.getDate() + 3);\r\n\r\n        var currentDate = new Date();\r\n\r\n        if (expiryDate <= currentDate) {\r\n            expiryContent = \"Expired\";\r\n            expiryColor = \"red\";\r\n            textDecoration = \"line-through\";\r\n            textColor = \"darkgrey\";\r\n        }\r\n        else if (expiryDate <= closeDate) {\r\n            expiryColor = \"red\";\r\n            expiryContent = \"Expires \" + expiryString;\r\n        }\r\n        else if (expiryDate <= longDate) {\r\n            expiryContent = \"Expires \" + expiryString;\r\n        }\r\n    }\r\n\r\n    let nameLabel = NameAndEmoji(props.item.name);\r\n\r\n    return <FlexRow>\r\n        {props.onCheckboxChange ?\r\n            <Fabric.Checkbox\r\n                checked={props.checked}\r\n                onChange={props.onCheckboxChange}\r\n                label={nameLabel}\r\n            /> :\r\n            <div style={{ textDecoration, color: textColor }}>\r\n                {nameLabel}\r\n            </div>}\r\n\r\n        <div style={{\r\n            color: expiryColor,\r\n            margin,\r\n            marginLeft: \"auto\",\r\n            fontSize: \"80%\",\r\n            fontStyle: \"italic\"\r\n        }}>\r\n            {expiryContent}\r\n        </div>\r\n        {props.children}\r\n    </FlexRow>\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { FlexRow } from './flexrow';\r\nimport { IShoppingItem, IItemDefinition } from '../models/models';\r\nimport { ItemPicker } from './itemPicker';\r\nimport { CategoryList } from './categorylist';\r\nimport { ActionList } from './actionlist';\r\nimport { Emoji } from './emoji';\r\nimport { ExpirationRow } from './expirationrow';\r\n\r\ntype ShoppingListProps = {\r\n    onComplete: () => void;\r\n    shoppingList: IShoppingItem[];\r\n    setShoppingList: React.Dispatch<React.SetStateAction<IShoppingItem[]>>;\r\n};\r\n\r\nexport const ShoppingList: React.FC<ShoppingListProps> = props => {\r\n    const AddItem = (item: IItemDefinition) => {\r\n        props.setShoppingList([...props.shoppingList, { ...item, purchased: false }]);\r\n    }\r\n\r\n    const DeleteItem = (index: number) => {\r\n        let newList = [...props.shoppingList];\r\n        newList.splice(index, 1);\r\n        props.setShoppingList(newList);\r\n    }\r\n\r\n    const PurchaseItem = (index: number, purchased: boolean) => {\r\n        let newList = [...props.shoppingList];\r\n        newList[index] = { ...newList[index], purchased };\r\n        props.setShoppingList(newList);\r\n    }\r\n\r\n    let margin = \"0 5px\";\r\n\r\n    return (\r\n        <ActionList\r\n            list={[\r\n                <CategoryList\r\n                    items={props.shoppingList}\r\n                    renderItem={(item, index) => <ExpirationRow item={item}\r\n                        checked={item.purchased}\r\n                        onCheckboxChange={(ev, checked) => {\r\n                            PurchaseItem(index, checked || false);\r\n                        }}\r\n                    >\r\n                        <Fabric.IconButton\r\n                            style={{ marginLeft: \"auto\" }}\r\n                            iconProps={{ iconName: \"Delete\" }}\r\n                            onClick={() => { DeleteItem(index); }}\r\n                        />\r\n                    </ExpirationRow>}\r\n                />,\r\n                !props.shoppingList || !props.shoppingList.length\r\n                    ? <FlexRow style={{ justifyContent: \"center\", fontWeight: 300 }}>Get started by adding some items to your shopping list!</FlexRow>\r\n                    : null\r\n            ]}\r\n\r\n            actions={[\r\n                <ItemPicker\r\n                    styles={{ root: { minWidth: \"200px\", width: \"50%\", margin, marginLeft: \"auto\" } }}\r\n                    onAddItem={AddItem}\r\n                    hiddenItems={props.shoppingList.map(s => s.name)}\r\n                />,\r\n                <Fabric.DefaultButton\r\n                    style={{ margin, marginRight: \"auto\" }}\r\n                    text=\"Trip Complete\"\r\n                    iconProps={{ iconName: \"ShoppingCart\" }}\r\n                    onClick={props.onComplete}\r\n                    disabled={props.shoppingList.length < 1 || !props.shoppingList.some(i => i.purchased)}\r\n                />\r\n            ]}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { FlexRow } from './flexrow';\r\nimport { IMenuItem, View } from '../App';\r\nimport { HeaderRow } from './headerrow';\r\n\r\nexport const MenuBar: React.FC<{ open?: boolean, menuItems: IMenuItem[], view: View, setView: React.Dispatch<React.SetStateAction<View>> }> = props => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n        <FlexRow column={true} style={{ borderBottom: \"1px solid lightgrey\", backgroundColor: \"#F5F5F5\", width: \"100%\", alignItems: \"center\" }}>\r\n            <FlexRow column style={{ maxWidth: \"700px\", width: \"100%\" }}>\r\n                <FlexRow onClick={() => setOpen(!open)} >\r\n                    <Fabric.Icon iconName={props.menuItems.find(i => i.key == props.view)!.icon} />\r\n                    <HeaderRow sub text={props.view} />\r\n                    <Fabric.IconButton style={{ marginLeft: \"auto\" }} iconProps={{ iconName: \"CollapseMenu\" }} />\r\n                </FlexRow>\r\n                {props.open || open ?\r\n                    props.menuItems.filter(item => item.key != props.view).map(item =>\r\n                        <FlexRow\r\n                            onClick={() => {\r\n                                setOpen(false);\r\n                                props.setView(item.key);\r\n                            }}\r\n                        >\r\n                            <Fabric.ActionButton\r\n                                iconProps={{ iconName: item.icon }}\r\n                                text={item.key}\r\n                            />\r\n                        </FlexRow>\r\n                    )\r\n                    : null}\r\n            </FlexRow>\r\n        </FlexRow>\r\n    );\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { FlexRow } from './flexrow';\r\nimport { IShoppingItem, IFridgeItem, IItemDefinition } from '../models/models';\r\nimport { ItemPicker } from './itemPicker';\r\nimport { CategoryList } from './categorylist';\r\nimport { ActionList } from './actionlist';\r\nimport { ExpirationRow } from './expirationrow';\r\n\r\ntype FridgeListProps = {\r\n    fridgeList: IFridgeItem[];\r\n    setFridgeList: React.Dispatch<React.SetStateAction<IFridgeItem[]>>;\r\n};\r\n\r\nexport const FridgeList: React.FC<FridgeListProps> = props => {\r\n    const [date, setDate] = React.useState(new Date());\r\n\r\n    const AddItem = (item: IItemDefinition) => {\r\n        let expires = new Date(date);\r\n        expires.setDate(expires.getDate() + (item.expirationLenth || 7));\r\n        props.setFridgeList([...props.fridgeList, { name: item.name, category: item.category, purchased: date, status: \"Fresh\", expires }]);\r\n    }\r\n\r\n    const DeleteItem = (index: number) => {\r\n        let newList = [...props.fridgeList];\r\n        newList.splice(index, 1);\r\n        props.setFridgeList(newList);\r\n    }\r\n\r\n    let margin = \"0 5px\";\r\n\r\n    return (\r\n        <ActionList\r\n            list={[\r\n                <CategoryList\r\n                    items={props.fridgeList}\r\n                    renderItem={(item, index) =>\r\n                        <ExpirationRow item={item}>\r\n                            <Fabric.IconButton\r\n                                style={{ marginLeft: undefined }}\r\n                                iconProps={{ iconName: \"Delete\" }}\r\n                                onClick={() => { DeleteItem(index); }}\r\n                            />\r\n                        </ExpirationRow>\r\n                    }\r\n                />,\r\n                !props.fridgeList || !props.fridgeList.length\r\n                    ? <FlexRow style={{ justifyContent: \"center\", fontWeight: 300 }}>Get started by adding some items to your fridge!</FlexRow>\r\n                    : null\r\n            ]}\r\n\r\n            actions={[\r\n                <ItemPicker\r\n                    styles={{ root: { minWidth: \"200px\", width: \"50%\", margin, marginLeft: \"auto\" } }}\r\n                    onAddItem={AddItem}\r\n                />,\r\n                <Fabric.DatePicker\r\n                    style={{ margin, marginRight: \"auto\" }}\r\n                    value={date}\r\n                    onSelectDate={newDate => newDate && setDate(newDate)}\r\n                />]}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport * as Fabric from 'office-ui-fabric-react';\r\nimport { FlexRow } from './flexrow';\r\nimport { IShoppingItem, IItemDefinition, IFridgeItem } from '../models/models';\r\nimport { ItemPicker } from './itemPicker';\r\nimport { CategoryList } from './categorylist';\r\nimport { ActionList } from './actionlist';\r\nimport { Category } from '../models/items';\r\nimport { ExpirationRow } from './expirationrow';\r\n\r\ntype CookListProps = {\r\n    fridgeList: IFridgeItem[];\r\n    setFridgeList: React.Dispatch<React.SetStateAction<IFridgeItem[]>>;\r\n};\r\n\r\nexport const CookList: React.FC<CookListProps> = props => {\r\n\r\n    let margin = \"0 5px\";\r\n\r\n    // we want to get just the closest expiration date items for each category\r\n    const minValues: { [category: string]: Date } = {};\r\n\r\n    props.fridgeList.filter(item => new Date(item.expires) > new Date()).forEach(item => {\r\n        let expiry = new Date(item.expires);\r\n        item.expires = expiry;\r\n        if (!minValues[item.category] || minValues[item.category] > expiry) {\r\n            minValues[item.category] = expiry;\r\n        }\r\n    });\r\n\r\n    // eh, an ok start\r\n    const mealCategories: Category[] = [\"Meat\", \"Vegetable\", \"Carbs\", \"Other\"];\r\n\r\n    // FYI Date == is reference equality\r\n    const items = props.fridgeList.filter(item => minValues[item.category] == item.expires && mealCategories.includes(item.category));\r\n\r\n    return (\r\n        <ActionList\r\n            list={[\r\n                <CategoryList\r\n                    items={items}\r\n                    renderItem={(item, index) =>\r\n                        <ExpirationRow item={item}>\r\n                            <Fabric.Checkbox />\r\n                        </ExpirationRow>}\r\n                />\r\n            ]}\r\n\r\n            actions={[]}\r\n        />\r\n    );\r\n}","import React from 'react';\nimport * as Fabric from 'office-ui-fabric-react';\nimport { ShoppingList } from './components/shoppinglist';\nimport { MenuBar } from './components/menubar';\nimport { FlexRow } from './components/flexrow';\nimport { HeaderRow } from './components/headerrow';\nimport { IShoppingItem, IFridgeItem, ItemStatus } from './models/models';\nimport { FridgeList } from './components/fridgelist';\nimport { GetItem } from './models/items';\nimport { CookList } from './components/cooklist';\n\nexport type View = \"Menu\" | \"Shop\" | \"Fridge\" | \"Cook\";\n\nexport interface IMenuItem {\n  key: View;\n  icon?: string;\n}\n\nconst savedView = localStorage.getItem(\"view-state\") || \"Shop\";\nconst savedShoppingList = localStorage.getItem(\"shopping-list\") || \"[]\";\nconst savedFridgeList = localStorage.getItem(\"fridge-list\") || \"[]\";\n\n// should really do another look up and conversion here, otherwise we won't get new updates to item types\n\nconst App: React.FC = () => {\n  const [view, setView] = React.useState<View>(savedView as View);\n  const [shoppingList, setShoppingList] = React.useState<IShoppingItem[]>(JSON.parse(savedShoppingList));\n  const [fridgeList, setFridgeList] = React.useState<IFridgeItem[]>(JSON.parse(savedFridgeList));\n\n  // if state has changed save it locally!\n  localStorage.setItem(\"view-state\", view);\n  localStorage.setItem(\"shopping-list\", JSON.stringify(shoppingList));\n  localStorage.setItem(\"fridge-list\", JSON.stringify(fridgeList));\n\n  const menuItems: IMenuItem[] = [\n    { key: \"Shop\", icon: \"ShoppingCart\" },\n    { key: \"Fridge\", icon: \"Door\" },\n    { key: \"Cook\", icon: \"EatDrink\" },\n  ];\n\n  let content = null;\n  switch (view) {\n    case \"Shop\":\n      content = <ShoppingList\n        shoppingList={shoppingList}\n        setShoppingList={setShoppingList}\n        onComplete={() => {\n          setFridgeList([\n            ...fridgeList,\n            ...shoppingList.filter(s => s.purchased).map(\n              shoppingItem => {\n                const def = GetItem(shoppingItem.name);\n                let expirationLength = 7;\n                let status: ItemStatus = \"Fresh\";\n                if (def && def.expirationLenth) {\n                  expirationLength = def.expirationLenth;\n                }\n                if (def && def.unopenedExpirationLength) {\n                  status = \"Unopened\";\n                }\n\n                let purchased = new Date();\n                let expires = new Date();\n                expires.setDate(purchased.getDate() + expirationLength);\n                const fridgeItem: IFridgeItem = {\n                  name: shoppingItem.name,\n                  category: shoppingItem.category,\n                  purchased,\n                  expires,\n                  status,\n                };\n\n                return fridgeItem;\n              }\n            )]);\n\n          setShoppingList([]);\n          setView(\"Fridge\");\n        }}\n      />;\n      break;\n    case \"Fridge\":\n      content = <FridgeList\n        fridgeList={fridgeList}\n        setFridgeList={setFridgeList}\n      />;\n      break;\n    case \"Cook\":\n      content = <CookList\n        fridgeList={fridgeList}\n        setFridgeList={setFridgeList}\n      />\n      break;\n  }\n\n  return (\n    <FlexRow\n      column\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n        position: \"absolute\",\n        alignItems: \"center\"\n      }}>\n      <MenuBar menuItems={menuItems} setView={setView} open={!content} view={view} />\n      <FlexRow column style={{ width: \"100%\", maxWidth: \"700px\" }}>\n        {content}\n      </FlexRow>\n    </FlexRow>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { initializeIcons } from '@uifabric/icons';\r\ninitializeIcons();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}